"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8947,3980,902],{5909:function(module){function java(Prism){var Prism1,keywords,classNamePrefix,className;Prism1=Prism,keywords=/\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/,className={pattern:RegExp((classNamePrefix=/(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source)+/[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,inside:{punctuation:/\./}},punctuation:/\./}},Prism1.languages.java=Prism1.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,lookbehind:!0,greedy:!0},"class-name":[className,{pattern:RegExp(classNamePrefix+/[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),lookbehind:!0,inside:className.inside}],keyword:keywords,function:[Prism1.languages.clike.function,{pattern:/(::\s*)[a-z_]\w*/,lookbehind:!0}],number:/\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),Prism1.languages.insertBefore("java","string",{"triple-quoted-string":{pattern:/"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,greedy:!0,alias:"string"},char:{pattern:/'(?:\\.|[^'\\\r\n]){1,6}'/,greedy:!0}}),Prism1.languages.insertBefore("java","class-name",{annotation:{pattern:/(^|[^.])@\w+(?:\s*\.\s*\w+)*/,lookbehind:!0,alias:"punctuation"},generics:{pattern:/<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,inside:{"class-name":className,keyword:keywords,punctuation:/[<>(),.:]/,operator:/[?&|]/}},namespace:{pattern:RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g,function(){return keywords.source})),lookbehind:!0,inside:{punctuation:/\./}}})}module.exports=java,java.displayName="java",java.aliases=[]},6553:function(module,__unused_webpack_exports,__webpack_require__){var refractorJava=__webpack_require__(5909),refractorJavadoclike=__webpack_require__(9858);function javadoc(Prism){var Prism1,codeLinePattern,memberReference,reference;Prism.register(refractorJava),Prism.register(refractorJavadoclike),Prism1=Prism,codeLinePattern=/(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m,memberReference=/#\s*\w+(?:\s*\([^()]*\))?/.source,reference=/(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(/<mem>/g,function(){return memberReference}),Prism1.languages.javadoc=Prism1.languages.extend("javadoclike",{}),Prism1.languages.insertBefore("javadoc","keyword",{reference:{pattern:RegExp(/(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source+"(?:"+reference+")"),lookbehind:!0,inside:{function:{pattern:/(#\s*)\w+(?=\s*\()/,lookbehind:!0},field:{pattern:/(#\s*)\w+/,lookbehind:!0},namespace:{pattern:/\b(?:[a-z]\w*\s*\.\s*)+/,inside:{punctuation:/\./}},"class-name":/\b[A-Z]\w*/,keyword:Prism1.languages.java.keyword,punctuation:/[#()[\],.]/}},"class-name":{pattern:/(@param\s+)<[A-Z]\w*>/,lookbehind:!0,inside:{punctuation:/[.<>]/}},"code-section":[{pattern:/(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,lookbehind:!0,inside:{code:{pattern:codeLinePattern,lookbehind:!0,inside:Prism1.languages.java,alias:"language-java"}}},{pattern:/(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,lookbehind:!0,inside:{line:{pattern:codeLinePattern,lookbehind:!0,inside:{tag:Prism1.languages.markup.tag,entity:Prism1.languages.markup.entity,code:{pattern:/.+/,inside:Prism1.languages.java,alias:"language-java"}}}}}],tag:Prism1.languages.markup.tag,entity:Prism1.languages.markup.entity}),Prism1.languages.javadoclike.addSupport("java",Prism1.languages.javadoc)}module.exports=javadoc,javadoc.displayName="javadoc",javadoc.aliases=[]},9858:function(module){function javadoclike(Prism){var javaDocLike;Object.defineProperty(javaDocLike=Prism.languages.javadoclike={parameter:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/},"addSupport",{value:function(languages,docLanguage){"string"==typeof languages&&(languages=[languages]),languages.forEach(function(lang){!function(lang,callback){var tokenName="doc-comment",grammar=Prism.languages[lang];if(grammar){var token=grammar[tokenName];if(!token){var definition={};definition[tokenName]={pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,lookbehind:!0,alias:"comment"},token=(grammar=Prism.languages.insertBefore(lang,"comment",definition))[tokenName]}if(token instanceof RegExp&&(token=grammar[tokenName]={pattern:token}),Array.isArray(token))for(var i=0,l=token.length;i<l;i++)token[i]instanceof RegExp&&(token[i]={pattern:token[i]}),callback(token[i]);else callback(token)}}(lang,function(pattern){pattern.inside||(pattern.inside={}),pattern.inside.rest=docLanguage})})}}),javaDocLike.addSupport(["java","javascript","php"],javaDocLike)}module.exports=javadoclike,javadoclike.displayName="javadoclike",javadoclike.aliases=[]}}]);